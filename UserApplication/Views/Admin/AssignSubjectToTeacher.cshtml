@model UserApplication.Models.TeacherInSubject
<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @Html.ActionLink("User List", "GetAllUsers", "Admin", new { area = "" }, new { @class = "navbar-brand" })
            @Html.ActionLink("Create New User", "CreateUser", "Admin", new { area = "" }, new { @class = "navbar-brand" })

            @Html.ActionLink("Add Course", "CreateCourse", "Admin", new { area = "" }, new { @class = "navbar-brand" })
            @Html.ActionLink("Assign Subject To Teacher", "AssignSubjectToTeacher", "Admin", new { area = "" }, new { @class = "navbar-brand" })
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-right">
                @Html.ActionLink("LogOut", "LogOut", "User", new { area = "" }, new { @class = "navbar-brand" })
            </ul>
        </div>
    </div>
</div>

@{
    ViewBag.Title = "AssignSubjectToTeacher";
    Layout = "~/Views/Shared/_LogOutPage.cshtml";

}
<link href="~/Content/Site.css" rel="stylesheet" />
<div style="display: table; margin: 0 auto; width: 100%; max-width: 500px;">

    <h2>AssignSubjectToTeacher</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4> </h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("UserId", ViewBag.TeacherList as SelectList, "--select--", htmlAttributes: new { @class = "form-control", required = "required" })

                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SubjectId, "SubjectId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SubjectId", ViewBag.SubjectList as SelectList, "--select--", htmlAttributes: new { @class = "form-control", required = "required" })

                    @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>
@*<div>
        @Html.ActionLink("Back to List", "GetAllUsers")
    </div>*@
<p>
    <input type="button" class="btn btn-primary btn-sm" '
           value="Teacher and subject List"
           onclick="window.location.href='@Url.Action("TeacherAndSubjectList","Admin")'" />

    <input type="button" class="btn btn-primary btn-sm" '
           value="Back To List"
           onclick="window.location.href='@Url.Action("GetAllUsers","Admin")'" />
</p>
