@model UserApplication.Models.UserViewModel
@{
    ViewBag.Title = "Registration";
}

<h2>Registration</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <h4>User Registration Form</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.HiddenFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            Male: @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control" } })
            Female: @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Hobbies, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Hobbies, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>





    <div class="form-group">
        @Html.LabelFor(model => model.AddressLine1, "Address", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AddressLine2, "Address", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
        </div>
    </div>


    @*get country dropdown*@
    <div class="form-group">
        @Html.LabelFor(model => model.CountryId, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CountryId, Model.Countries.Select(item => new SelectListItem
       {
           Value = item.CountryId.ToString(),
           Text = item.CountryName.ToString()

       }),new {@class="control-label col-md-2",@Id="ddlCountry" })
            @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })

        </div>
    </div>

    @*get state dropdown*@
    <div class="form-group">
        @Html.LabelFor(model => model.StateId, "State", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.StateId, Model.States.Select(item => new SelectListItem
            {
            Value = item.StateId.ToString(),
            Text = item.StateName.ToString()

            }), new { @class = "control-label col-md-2", @id = "ddlStateData" })
            @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
        </div>
    </div>

    @*get city dropdown*@
    <div class="form-group">
        @Html.LabelFor(model => model.CityId, "City", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CityId, Model.Cities.Select(item => new SelectListItem
            {
            Value = item.CityId.ToString(),
            Text = item.CityName.ToString()

            }), new { @class = "control-label col-md-2", @id = "ddlCity" })
            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Zipcode, "Pincode", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">



            @Html.DropDownListFor(model => model.CourseId, Model.Courses.Select(item => new SelectListItem
            {
            Value = item.CourseId.ToString(),
            Text = item.CourseName.ToString()

            }))

          @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })


       </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.DropDownListFor(model => model.RoleId,Model.Roles.Select(item => new SelectListItem
            {
            Value = item.RoleId.ToString(),
            Text = item.RoleName.ToString()

            }))
            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
        </div>
    </div>






    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.Partial("_BackToListButtonPartial")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@*Jquery code for dropdown calling*@
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script type="text/javascript">

    $(document).ready(function () {
        jQuery("#ddlStateData").empty();
        $("#ddlCity").empty();

        var id = $("#ddlCountry").val();
            $.ajax({
                type: 'Post',
                url: '@Url.Action("getState")',
                dataType: 'json',
                data: { Id: id },
                success: function (states) {

                    $.each(states, function (i, state) {
                        $("#ddlStateData").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });

    });

        $("#ddlCountry").change(function () {
            debugger;
            jQuery("#ddlStateData").empty();
            var id = $("#ddlCountry").val();
            $.ajax({
                type: 'Post',
                url: '@Url.Action("getState")',
                dataType: 'json',
                data: { Id: id },
                success: function (states) {

                    $.each(states, function (i, state) {
                        $("#ddlStateData").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });

          $("#ddlStateData").change(function () {
                $("#ddlCity").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("getcity")',
                    dataType: 'json',
                    data: { id: $("#ddlStateData").val() },
                    success: function (city) {

                        $.each(city, function (i, city) {
                            $("#ddlCity").append('<option value="'
                                + city.Value + '">'
                                + city.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed.' + ex);
                    }
                });
                return false;
            });
      //  });
</script>

